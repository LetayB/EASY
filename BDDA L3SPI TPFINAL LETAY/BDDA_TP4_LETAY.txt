CREATE SCHEMA videoclub;
SET search_path TO "videoclub","$user",public;

CREATE TABLE Magasin(
	id_magasin 	integer PRIMARY KEY,
	prenom 		varchar,
	nom 		varchar,
	adresse 	varchar
);

CREATE TABLE Client(
	id_client 	integer PRIMARY KEY,
	nom 		varchar,
	adresse 	varchar,
	caution 	integer
);

CREATE TABLE Genre(
	id_genre 	integer PRIMARY KEY,
	nom 		varchar,
	type_public varchar
);

CREATE TABLE Personne(
	id_personne integer PRIMARY KEY,
	nom 		varchar,
	prenom 		varchar
);

CREATE TABLE Film(
	id_film 	integer PRIMARY KEY,
	titre 		varchar,
	duree  		int,
	id_genre 	integer REFERENCES Genre(id_genre),
	id_personne integer REFERENCES Personne(id_personne)
);

CREATE TABLE DVD(
	id_dvd 		integer PRIMARY KEY,
	etat 		varchar, 
	date_mes 	date,
	id_magasin 	integer REFERENCES Magasin(id_magasin),
	id_film 	integer REFERENCES Film(id_film)
);

CREATE TABLE Emprunt(
	id_emprunt 	integer PRIMARY KEY,
	date_deb 	date,
	date_fin 	date,
	id_client 	integer REFERENCES Client(id_client),
	id_dvd 		integer REFERENCES DVD(id_dvd)
);

CREATE TABLE Jouer(
	id_jeu 		integer PRIMARY KEY,
	id_personne integer REFERENCES Personne(id_personne),
	id_film 	integer REFERENCES Film(id_film)
);

INSERT INTO Client VALUES (1,'Pierre','Jacobini',10);
INSERT INTO Client VALUES (2,'Amaury','Savarré',40);
INSERT INTO Client VALUES (3,'Steve','Austin',20);

INSERT INTO Genre VALUES(1,'Action');
INSERT INTO Genre VALUES(2,'Romance');
INSERT INTO Genre VALUES(3,'Horreur');
INSERT INTO Genre VALUES(4,'Documentaire');
INSERT INTO Genre VALUES(5,'Comédie');

INSERT INTO Personne VALUES (1,'James','Wong');
INSERT INTO Personne VALUES (2,'Dominique','Farrugia');
INSERT INTO Personne VALUES (3,'Michel','Hazanavicius');

INSERT INTO Film VALUES (1,'Dragonball Evolution',85,4,1);
INSERT INTO Film VALUES (2,'La stratégie de l\'échec',60,2,2);
INSERT INTO Film VALUES (3,'La classe Americaine',70,1,3);

INSERT INTO Magasin VALUES (1,'Video club random','La croix de pierre,7200');

INSERT INTO DVD VALUES (1,'Mauvais','2014/05/06',1,1);
INSERT INTO DVD VALUES (2,'Bon','2002/03/15',1,2);
INSERT INTO DVD VALUES (3,'Bon','2000/01/01',1,3);

INSERT INTO Emprunt VALUES (10,'2013/01/05','2014/01/05',1,1);
INSERT INTO Emprunt VALUES (27,'2015/02/24',NULL,1,3);
INSERT INTO Emprunt VALUES (32,'2015/02/20',NULL,3,2);


--3)

SELECT id_client,id_dvd FROM Emprunt WHERE date_fin IS NULL AND date_deb+3 < DATE(NOW());

--4)

CREATE OR REPLACE FUNCTION info_client (var_id_client int)
RETURNS VOID AS $$
DECLARE
	cli_record RECORD;
	nb_emprunts INTEGER;
	emp_record RECORD;
BEGIN
	SELECT * INTO cli_record FROM client WHERE id_client = var_id_client;
	SELECT count(*) into nb_emprunts FROM client NATURAL JOIN emprunt WHERE id_client = var_id_client;
	RAISE NOTICE 'Client : % %,domicilé au %',cli_record.nom,cli_record.prenom,cli_record.adresse;
	RAISE NOTICE 'Nombre de dvd loué(s) : %',nb_emprunts;
	FOR emp_record IN SELECT * FROM Client NATURAL JOIN Emprunt NATURAL JOIN DVD NATURAL JOIN Film WHERE id_client = var_id_client
	LOOP
		RAISE NOTICE 'DVD n°% : %',emp_record.id_dvd,emp_record.titre;
	END LOOP;
END;
$$LANGUAGE PLPGSQL;

--5)

CREATE OR REPLACE FUNCTION valid_client()
RETURNS TRIGGER AS $$
BEGIN
	IF NEW.id_client IN (SELECT id_client FROM Emprunt WHERE date_fin IS NULL AND date_deb+3 < DATE(NOW())) THEN
		RAISE EXCEPTION 'Emprunt en retard';
	ELSIF (SELECT count(*) FROM client NATURAL JOIN emprunt WHERE id_client = NEW.id_client) >= (SELECT caution FROM Client WHERE id_client = NEW.id_client)/10 THEN 
		RAISE EXCEPTION 'Too much emprunt';
	END IF;
	RETURN NEW;
END;
$$LANGUAGE PLPGSQL;

CREATE TRIGGER emprunt_possible BEFORE INSERT OR UPDATE ON emprunt FOR EACH ROW EXECUTE PROCEDURE valid_client();
